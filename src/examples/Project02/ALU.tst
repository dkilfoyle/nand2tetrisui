output-list x%D y%D out%B;

note "Set x=0, y=-1",
set x %B0000000000000000,  // x = 0
set y %B1111111111111111;  // y = -1

note "Compute 0",
set nx 0,
set zx 1,
set ny 0,
set zy 1,
set f  1,
set no 0,
eval,
output,
expect out %B0000000000000000,
expect zr 1,
expect ng 0;

note "Compute 1",
set nx 1,
set zx 1,
set ny 1,
set zy 1,
set f  1,
set no 1,
eval,
output,
expect out %B0000000000000001,
expect zr 0,
expect ng 0;

note "Compute -1",
set nx 1,
set zx 1,
set ny 0,
set zy 1,
set f  1,
set no 0,
eval,
output,
expect out %B1111111111111111,
expect zr 0,
expect ng 1;

note "Compute x",
set nx 0,
set zx 0,
set ny 1,
set zy 1,
set f  0,
set no 0,
eval,
output,
expect out %B0000000000000000,
expect zr 1,
expect ng 0;

note "Compute y",
set zx 1,
set nx 1,
set zy 0,
set ny 0,
set f  0,
set no 0,
eval,
output,
expect out %B1111111111111111,
expect zr 0,
expect ng 1;

note "Compute !x",
set zx 0,
set nx 0,
set zy 1,
set ny 1,
set f  0,
set no 1,
eval,
output,
expect out %B1111111111111111,
expect zr 0,
expect ng 1;

note "Compute !y",
set zx 1,
set nx 1,
set zy 0,
set ny 0,
set f  0,
set no 1,
eval,
output,
expect out %B0000000000000000,
expect zr 1,
expect ng 0;

note "Compute -x",
set zx 0,
set nx 0,
set zy 1,
set ny 1,
set f  1,
set no 1,
eval,
output,
expect out %B0000000000000000,
expect zr 1,
expect ng 0;

note "Compute -y",
set zx 1,
set nx 1,
set zy 0,
set ny 0,
set f  1,
set no 1,
eval,
output,
expect out %B0000000000000001,
expect zr 0,
expect ng 0;

note "Compute x + 1",
set zx 0,
set nx 1,
set zy 1,
set ny 1,
set f  1,
set no 1,
eval,
output,
expect out %B0000000000000001,
expect zr 0,
expect ng 0;

note "Compute y + 1",
set zx 1,
set nx 1,
set zy 0,
set ny 1,
set f  1,
set no 1,
eval,
output,
expect out %B0000000000000000,
expect zr 1,
expect ng 0;

note "Compute x - 1",
set zx 0,
set nx 0,
set zy 1,
set ny 1,
set f  1,
set no 0,
eval,
output,
expect out %B1111111111111111,
expect zr 0,
expect ng 1;

note "Compute y - 1",
set zx 1,
set nx 1,
set zy 0,
set ny 0,
set f  1,
set no 0,
eval,
output,
expect out %B1111111111111110,
expect zr 0,
expect ng 1;

note "Compute x + y",
set zx 0,
set nx 0,
set zy 0,
set ny 0,
set f  1,
set no 0,
eval,
output,
expect out %B1111111111111111,
expect zr 0,
expect ng 1;

note "Compute x - y",
set zx 0,
set nx 1,
set zy 0,
set ny 0,
set f  1,
set no 1,
eval,
output,
expect out %B0000000000000001,
expect zr 0,
expect ng 0;

note "Compute y - x",
set zx 0,
set nx 0,
set zy 0,
set ny 1,
set f  1,
set no 1,
eval,
output,
expect out %B1111111111111111,
expect zr 0,
expect ng 1;

note "Compute x & y",
set zx 0,
set nx 0,
set zy 0,
set ny 0,
set f  0,
set no 0,
eval,
output,
expect out %B0000000000000000,
expect zr 1,
expect ng 0;

note "Compute x | y",
set zx 0,
set nx 1,
set zy 0,
set ny 1,
set f  0,
set no 1,
eval,
output,
expect out %B1111111111111111,
expect zr 0,
expect ng 1;

note "set x=17, y=3",
set x %B000000000010001,  // x = 17
set y %B000000000000011;  // y =  3

note "Compute 0",
set zx 1,
set nx 0,
set zy 1,
set ny 0,
set f  1,
set no 0,
eval,
output,
expect out %B0000000000000000,
expect zr 1,
expect ng 0;

note "Compute 1",
set zx 1,
set nx 1,
set zy 1,
set ny 1,
set f  1,
set no 1,
eval,
output,
expect out %B0000000000000001,
expect zr 0,
expect ng 0;

note "Compute -1",
set zx 1,
set nx 1,
set zy 1,
set ny 0,
set f  1,
set no 0,
eval,
output,
expect out  %B1111111111111111,
expect zr 0,
expect ng 1;

note "Compute x",
set zx 0,
set nx 0,
set zy 1,
set ny 1,
set f  0,
set no 0,
eval,
output,
expect out %B0000000000010001,
expect zr 0,
expect ng 0;

note "Compute y",
set zx 1,
set nx 1,
set zy 0,
set ny 0,
set f  0,
set no 0,
eval,
output,
expect out %B0000000000000011,
expect zr 0,
expect ng 0;

note "Compute !x",
set zx 0,
set nx 0,
set zy 1,
set ny 1,
set f  0,
set no 1,
eval,
output,
expect out %B1111111111101110,
expect zr 0,
expect ng 1;

note "Compute !y",
set zx 1,
set nx 1,
set zy 0,
set ny 0,
set f  0,
set no 1,
eval,
output,
expect out %B1111111111111100,
expect zr 0,
expect ng 1;

note "Compute -x",
set zx 0,
set nx 0,
set zy 1,
set ny 1,
set f  1,
set no 1,
eval,
output,
expect out %B1111111111101111,
expect zr 0,
expect ng 1;

note "Compute -y",
set zx 1,
set nx 1,
set zy 0,
set ny 0,
set f  1,
set no 1,
eval,
output,
expect out %B1111111111111101,
expect zr 0,
expect ng 1;

note "Compute x + 1",
set zx 0,
set nx 1,
set zy 1,
set ny 1,
set f  1,
set no 1,
eval,
output,
expect out %B0000000000010010,
expect zr 0,
expect ng 0;

note "Compute y + 1",
set zx 1,
set nx 1,
set zy 0,
set ny 1,
set f  1,
set no 1,
eval,
output,
expect out %B0000000000000100,
expect zr 0,
expect ng 0;

note "Compute x - 1",
set zx 0,
set nx 0,
set zy 1,
set ny 1,
set f  1,
set no 0,
eval,
output,
expect out %B0000000000010000,
expect zr 0,
expect ng 0;

note "Compute y - 1",
set zx 1,
set nx 1,
set zy 0,
set ny 0,
set f  1,
set no 0,
eval,
output,
expect out %B0000000000000010,
expect zr 0,
expect ng 0;

note "Compute x + y",
set zx 0,
set nx 0,
set zy 0,
set ny 0,
set f  1,
set no 0,
eval,
output,
expect out %B0000000000010100,
expect zr 0,
expect ng 0;

note "Compute x - y",
set zx 0,
set nx 1,
set zy 0,
set ny 0,
set f  1,
set no 1,
eval,
output,
expect out %B0000000000001110,
expect zr 0,
expect ng 0;

note "Compute y - x",
set zx 0,
set nx 0,
set zy 0,
set ny 1,
set f  1,
set no 1,
eval,
output,
expect out %B1111111111110010,
expect zr 0,
expect ng 1;

note "Compute x & y",
set zx 0,
set nx 0,
set zy 0,
set ny 0,
set f  0,
set no 0,
eval,
output,
expect out %B0000000000000001,
expect zr 0,
expect ng 0;

note "Compute x | y",
set zx 0,
set nx 1,
set zy 0,
set ny 1,
set f  0,
set no 1,
eval,
output,
expect out %B0000000000010011,
expect zr 0,
expect ng 0;
